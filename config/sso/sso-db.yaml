apiVersion: v1
items:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: sso
    name: keycloak-postgresql
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 10Gi
    storageClassName: %STORAGE_CLASS%
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    labels:
      app: sso
      name: keycloak-postgresql
    name: keycloak-postgresql
  spec:
    replicas: 1
    selector:
      name: keycloak-postgresql
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: sso
          name: keycloak-postgresql
        name: keycloak-postgresql
      spec:
        containers:
        - capabilities: {}
          env:
          - name: POSTGRESQL_USER
            value: keycloakuser
          - name: POSTGRESQL_PASSWORD
            value: keycloakpasswd
          - name: POSTGRESQL_DATABASE
            value: keycloak
          image: ' '
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /usr/libexec/check-container
              - --live
            initialDelaySeconds: 120
            timeoutSeconds: 10
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /usr/libexec/check-container
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: keycloak-postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        volumes:
        - name: keycloak-postgresql-data
          persistentVolumeClaim:
            claimName: keycloak-postgresql
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:12
          namespace: user1
        lastTriggeredImage: ""
      type: ImageChange
    - type: ConfigChange
  status: {}
kind: List
metadata: {}

